name: CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      POSTGRES_DB: test_db
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      DJANGO_DATABASE_HOST: localhost
      DJANGO_DATABASE_PORT: 5432
      PGUSER: test_user
      DOMAIN_NAME: "localhost"
    services:
      postgres:
        image: postgres:18
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # Consigliato: usa @<SHA> per sicurezza
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # Consigliato: usa @<SHA> per sicurezza
        with:
          python-version: "3.12"
      - name: Install Poetry
        uses: abatilo/actions-poetry@65c61eae400c65c9510a584af85138c1ae19bbc0 # Consigliato: usa @<SHA> per sicurezza
      - name: Add Poetry to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
      - name: Run lint
        run: poetry run ruff check .
      - name: Run tests
        run: poetry run pytest --timeout=10 --cov --cov-report=xml --cov-report=term
      - name: Upload coverage to Codecov
        if: ${{ !env.ACT }}
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # Consigliato: usa @<SHA> per sicurezza
        with:
          files: coverage.xml
          fail_ci_if_error: true
